/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOV = 5;
  /** RegularExpression Id. */
  int RIGHT = 6;
  /** RegularExpression Id. */
  int PUT = 7;
  /** RegularExpression Id. */
  int PICK = 8;
  /** RegularExpression Id. */
  int POP = 9;
  /** RegularExpression Id. */
  int HOP = 10;
  /** RegularExpression Id. */
  int GO = 11;
  /** RegularExpression Id. */
  int NOT = 12;
  /** RegularExpression Id. */
  int SAFEEXEC = 13;
  /** RegularExpression Id. */
  int WALK = 14;
  /** RegularExpression Id. */
  int JUMP = 15;
  /** RegularExpression Id. */
  int DROP = 16;
  /** RegularExpression Id. */
  int GRAB = 17;
  /** RegularExpression Id. */
  int LETGO = 18;
  /** RegularExpression Id. */
  int TURNTOMY = 19;
  /** RegularExpression Id. */
  int TURNTOTHE = 20;
  /** RegularExpression Id. */
  int MOVES = 21;
  /** RegularExpression Id. */
  int NOP = 22;
  /** RegularExpression Id. */
  int SIZE = 23;
  /** RegularExpression Id. */
  int MYX = 24;
  /** RegularExpression Id. */
  int MYY = 25;
  /** RegularExpression Id. */
  int MYCHIPS = 26;
  /** RegularExpression Id. */
  int MYBALLOONS = 27;
  /** RegularExpression Id. */
  int BALLOONSHERE = 28;
  /** RegularExpression Id. */
  int CHIPSHERE = 29;
  /** RegularExpression Id. */
  int ROOMFORCHIPS = 30;
  /** RegularExpression Id. */
  int ISBLOCKED = 31;
  /** RegularExpression Id. */
  int ISFACING = 32;
  /** RegularExpression Id. */
  int ZERO = 33;
  /** RegularExpression Id. */
  int LEFT = 34;
  /** RegularExpression Id. */
  int BACK = 35;
  /** RegularExpression Id. */
  int NORTH = 36;
  /** RegularExpression Id. */
  int EAST = 37;
  /** RegularExpression Id. */
  int SOUTH = 38;
  /** RegularExpression Id. */
  int WEST = 39;
  /** RegularExpression Id. */
  int BALLOONS = 40;
  /** RegularExpression Id. */
  int CHIPS = 41;
  /** RegularExpression Id. */
  int EXEC = 42;
  /** RegularExpression Id. */
  int NEW = 43;
  /** RegularExpression Id. */
  int VAR = 44;
  /** RegularExpression Id. */
  int MACRO = 45;
  /** RegularExpression Id. */
  int IF = 46;
  /** RegularExpression Id. */
  int THEN = 47;
  /** RegularExpression Id. */
  int ELSE = 48;
  /** RegularExpression Id. */
  int FI = 49;
  /** RegularExpression Id. */
  int DO = 50;
  /** RegularExpression Id. */
  int OD = 51;
  /** RegularExpression Id. */
  int REP = 52;
  /** RegularExpression Id. */
  int TIMES = 53;
  /** RegularExpression Id. */
  int PER = 54;
  /** RegularExpression Id. */
  int LPAREN = 55;
  /** RegularExpression Id. */
  int RPAREN = 56;
  /** RegularExpression Id. */
  int LBRACE = 57;
  /** RegularExpression Id. */
  int RBRACE = 58;
  /** RegularExpression Id. */
  int COMMA = 59;
  /** RegularExpression Id. */
  int SEMICOLON = 60;
  /** RegularExpression Id. */
  int EQUALS = 61;
  /** RegularExpression Id. */
  int NUMBER = 62;
  /** RegularExpression Id. */
  int IDENTIFIER = 63;
  /** RegularExpression Id. */
  int NUM = 64;
  /** RegularExpression Id. */
  int DIGIT = 65;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Move\"",
    "\"RIGHT\"",
    "\"Put\"",
    "\"Pick\"",
    "\"Pop\"",
    "\"HOP\"",
    "\"GO\"",
    "\"not\"",
    "\"safeExe\"",
    "\"walk\"",
    "\"nump\"",
    "\"drop\"",
    "\"grab\"",
    "\"letgo\"",
    "\"turntomy\"",
    "\"turntothe\"",
    "\"moves\"",
    "\"nop\"",
    "\"size\"",
    "\"myx\"",
    "\"myy\"",
    "\"mychips\"",
    "\"myballoons\"",
    "\"balloonshere\"",
    "\"chipsHere\"",
    "\"roomforchips\"",
    "\"isBlocked?\"",
    "\"isFacing?\"",
    "\"zero?\"",
    "\"left\"",
    "\"back\"",
    "\"north\"",
    "\"east\"",
    "\"south\"",
    "\"west\"",
    "\"BALLOONS\"",
    "\"CHIPS\"",
    "\"EXEC\"",
    "\"NEW\"",
    "\"VAR\"",
    "\"MACRO\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"fi\"",
    "\"do\"",
    "\"od\"",
    "\"rep\"",
    "\"times\"",
    "\"per\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<NUM>",
    "<DIGIT>",
  };

}
